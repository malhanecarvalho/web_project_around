!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,n(r.key),r)}}function n(t){var n=function(t,n){if("object"!=e(t)||!t)return t;var o=t[Symbol.toPrimitive];if(void 0!==o){var r=o.call(t,"string");if("object"!=e(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(n)?n:n+""}var o=function(){return e=function e(t,n){var o=t.items,r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=o,this._renderer=r,this._container=document.querySelector(n)},(n=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}}])&&t(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function i(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,u(o.key),o)}}function u(e){var t=function(e,t){if("object"!=r(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!=r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==r(t)?t:t+""}var c=function(){return e=function e(t){var n,o,r,i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),n=this,r=function(e){"Escape"===e.key&&i.close()},(o=u(o="_handleEscClose"))in n?Object.defineProperty(n,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[o]=r,this._popupElement=document.querySelector(t),this._popupElementAdd=document.querySelector(t),this._popupElementEdit=document.querySelector(t)},(t=[{key:"open",value:function(){this._popupElement.classList.add("popup-opened"),this._popupElementAdd.classList.add("popup-add-opened"),document.addEventListener("keydown",this._handleEscClose),(this._popupElementEdit.style.display="none")&&(this._popupElementEdit.style.display="block")}},{key:"close",value:function(){this._popupElement.classList.remove("popup-opened"),this._popupElementAdd.classList.remove("popup-add-opened"),document.removeEventListener("keydown",this._handleEscClose),(this._popupElementEdit.style.display="block")&&(this._popupElementEdit.style.display="none")}},{key:"_clickClosePopup",value:function(){this._popupElement.addEventListener("click",(function(e){(e.target.classList.contains("popup-opened")||e.target.classList.contains("popup-add-opened"))&&e.target.classList.remove("popup-opened"),e.target.classList.remove("popup-add-opened")}))}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.querySelectorAll(".popup__icon").forEach((function(t){t.addEventListener("click",(function(){e.close()})),e._clickClosePopup()}))}}])&&i(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function l(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,s(o.key),o)}}function s(e){var t=function(e,t){if("object"!=a(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!=a(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==a(t)?t:t+""}function p(e,t,n){return t=m(t),function(e,t){if(t&&("object"===a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,f()?Reflect.construct(t,n||[],m(e).constructor):t.apply(e,n))}function f(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(f=function(){return!!e})()}function d(){return d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=m(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},d.apply(this,arguments)}function m(e){return m=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},m(e)}function y(e,t){return y=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},y(e,t)}var _=function(e){function t(e){var n,o=e.popupSelector,r=e.submitCallback;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=p(this,t,[o]))._popupElement=document.querySelector(o),n._submitCallback=r,n._formElement=n._popupElement.querySelector(".popup__form"),n._submitButton=n._popupElement.querySelector(".popup__button"),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&y(e,t)}(t,e),n=t,(o=[{key:"_getInputValues",value:function(){var e=this._formElement.querySelectorAll(".popup__input"),t={};return e.forEach((function(e){t[e.name]=e.value})),t}},{key:"setInputValues",value:function(e){this._formElement.querySelectorAll(".popup__input").forEach((function(t){t.value=e[t.name]}))}},{key:"_renderLoading",value:function(e){e&&(this._submitButton.textContent="Salvando...")}},{key:"close",value:function(){d(m(t.prototype),"close",this).call(this),this._formElement.reset(),this._submitButton.textContent="Salvar"}},{key:"setEventListeners",value:function(){var e=this;d(m(t.prototype),"setEventListeners",this).call(this),this._popupElement.querySelectorAll(".popup__form").forEach((function(t){t.addEventListener("submit",(function(t){t.preventDefault(),e._submitCallback(e._getInputValues()),e._renderLoading(!0),e.close()}))}))}}])&&l(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,o}(c);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function h(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,b(o.key),o)}}function b(e){var t=function(e,t){if("object"!=v(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!=v(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==v(t)?t:t+""}function E(e,t,n){return t=g(t),function(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,S()?Reflect.construct(t,n||[],g(e).constructor):t.apply(e,n))}function S(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(S=function(){return!!e})()}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},k.apply(this,arguments)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}function w(e,t){return w=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},w(e,t)}var j=function(e){function t(e,n){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(o=E(this,t,[e]))._popupElement=document.querySelector(e),o._submitCallback=n,o}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&w(e,t)}(t,e),n=t,(o=[{key:"openPopup",value:function(){"none"==this._popupElement.style.display&&(this._popupElement.style.display="block")}},{key:"closePopup",value:function(){"block"==this._popupElement.style.display&&(this._popupElement.style.display="none")}},{key:"setEventListeners",value:function(){k(g(t.prototype),"setEventListeners",this).call(this),this.closePopup()}}])&&h(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,o}(c);function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function q(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,O(o.key),o)}}function O(e){var t=function(e,t){if("object"!=P(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!=P(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==P(t)?t:t+""}var L=document.querySelector("#form"),C=document.querySelector("#form-add"),T=document.querySelector("#form-edit"),U=document.querySelector(".popup__description-name"),I=document.querySelector(".popup__description-job "),A=document.querySelector(".popup-add__description-title"),x=document.querySelector(".popup-add__description-link"),D=document.querySelector(".popup-edit__description-link"),F=document.querySelector("#input-title"),R=document.querySelector("#input-job"),z=document.querySelector("#input-place"),B=document.querySelector("#input-url"),J=document.querySelector("#input-edit-url"),M=document.querySelector("#button-form"),N=document.querySelector("#button-form-add"),V=document.querySelector("#button-form-edit"),H=[{formElement:{firstForm:L,secondForm:C},inputElement:{inputTitle:U},errormessage:{spanTitle:F}},{formElement:{firstForm:L,secondForm:C},inputElement:{inputJob:I},errormessage:{spanJob:R}},{formElement:{firstForm:L,secondForm:C},inputElement:{InputTitlePlace:A},errormessage:{spanPlaceTitle:z}},{formElement:{secondForm:C},inputElement:{InputUrl:x},errormessage:{spanUrl:B}},{formElement:{formEdit:T},inputElement:{inputEditUrl:D},errormessage:{spanEditUrl:J}}],G=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=t},(t=[{key:"_formItens",value:function(){return document.querySelector(this._formElement).cloneNode(!0)}},{key:"PopupForm",value:function(){var e=this;this._element=this._formItens();var t=[U,I],n=[F,R],o=!0;return t.forEach((function(r,i){r.validity.valid&&""!==r.value.trim()?(r.classList.remove("popup__input_type_error"),n[i].textContent=" "):(t[i].classList.add("popup__input_type_error"),n[i].textContent=r.validationMessage,e._buttonDisabled(),o=!1)})),o&&this._buttonActive(),this._element}},{key:"PopupAddForm",value:function(){var e=this;this._element=this._formItens();var t=[A,x],n=[z,B],o=!0;return t.forEach((function(r,i){r.validity.valid&&""!==r.value.trim()?(r.classList.remove("popup__input_type_error"),n[i].textContent=" "):(t[i].classList.add("popup__input_type_error"),n[i].textContent=r.validationMessage,e._buttonDisabled(),o=!1)})),o&&this._buttonActive(),this._element}},{key:"PopupEditForm",value:function(){var e=this;this._element=this._formItens();var t=[D],n=[J],o=!0;return t.forEach((function(r,i){r.validity.valid?(r.classList.remove("popup__input_type_error"),n[i].textContent=" "):(t[i].classList.add("popup__input_type_error"),n[i].textContent=r.validationMessage,e._buttonDisabled(),o=!1)})),o&&this._buttonActive(),this._element}},{key:"inputElements",value:function(){return this._element=this._formItens(),this._setEvents(),this._element}},{key:"_buttonDisabled",value:function(){[M,N,V].forEach((function(e){e.classList.add("popup__button_inactive"),e.setAttribute("disabled",!0)}))}},{key:"_buttonActive",value:function(){[M,N,V].forEach((function(e){e.classList.remove("popup__button_inactive"),e.removeAttribute("disabled",!0)}))}},{key:"_checkInputValidity",value:function(){var e=this,t=[U,I],n=[F,R,z,B];t.forEach((function(o,r){o.validity.valid&&""!==o.value.trim()?(e._buttonActive(),o.classList.remove("popup__input_type_error"),n[r].textContent=" "):(t[r].classList.add("popup__input_type_error"),n[r].textContent=o.validationMessage,e._buttonDisabled())}))}},{key:"_setEvents",value:function(){var e=this;M.addEventListener("submit",(function(e){e.preventDefault()})),[U,I].forEach((function(t){t.addEventListener("input",(function(){e.PopupForm()}))})),N.addEventListener("submit",(function(e){e.preventDefault(),C.reset()})),[A,x].forEach((function(t){t.addEventListener("input",(function(){e.PopupAddForm()}))})),V.addEventListener("submit",(function(e){e.preventDefault(),T.reset()})),[D].forEach((function(t){t.addEventListener("input",(function(){e.PopupEditForm()}))}))}}])&&q(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function K(e){return K="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},K(e)}function Q(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,W(o.key),o)}}function W(e){var t=function(e,t){if("object"!=K(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!=K(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==K(t)?t:t+""}var X=document.querySelector(".cards"),Y=document.querySelector(".popup-img"),Z=document.querySelector(".popup-img__photo"),$=document.querySelector(".popup-img__title"),ee=document.querySelector(".popup-img__icon"),te=document.querySelector(".popup-add__description-title"),ne=document.querySelector(".popup-add__description-link"),oe=document.querySelector(".popup-delete__icon"),re=function(){return e=function e(t,n,o,r,i,u,c,a,l,s,p){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t,this._link=n,this._id=o,this._likes=r,this._owner=i._id,this._cardSelector=u,this._openPopupConfirmation=c,this._closePopupConfirmation=a,this._handleDeleteClick=l,this._addlikes=s,this._removelikes=p},(t=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".cards__container").cloneNode(!0)}},{key:"generateCard",value:function(){var e=this;this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".cards__title").textContent=this._name,this._element.querySelector(".cards__image").setAttribute("src",this._link),this._element.querySelector(".cards__image").setAttribute("alt",this._name),this._element.querySelector(".cards__icon-like_count").textContent=this._likes.length,this.isLiked()&&this._element.querySelector(".cards__icon-like").classList.add("cards__icon-like_active");var t=!1,n=this._likes.length;return this._element.querySelector(".cards__icon-like").addEventListener("click",(function(){e.isLiked();var o=e._element.querySelector(".cards__icon-like"),r=e._element.querySelector(".cards__icon-like_count");t?(t=!1,n--,o.classList.remove("cards__icon-like_active"),e._removelikes(e._id)):(t=!0,n++,o.classList.add("cards__icon-like_active"),e._addlikes(e._id)),r.textContent=n})),this._element}},{key:"newCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".cards__title").textContent=te.value,this._element.querySelector(".cards__image").setAttribute("src",ne.value),this._element.querySelector(".cards__image").setAttribute("alt",te.value),this.isLiked()&&this._element.querySelector(".cards__icon-like").classList.add("cards__icon-like_active"),this._element}},{key:"isLiked",value:function(){return this._likes.find((function(e){return"456ee6ec-46f6-419a-a366-46d144a5e3b1"===e._id}))}},{key:"_handleOpenPopup",value:function(){Z.src=this._link,Z.alt=this._name,$.textContent=this._name,Y.classList.add("popup-img-opened")}},{key:"_handleClosePopup",value:function(){Z.src=" ",$.textContent=" ",Y.classList.remove("popup-img-opened")}},{key:"_trash",value:function(){var e=this;this._element.querySelector(".cards__icon-trash").addEventListener("click",(function(t){e._openPopupConfirmation(),e._handleDeleteClick(e._id,t.target.parentElement)}))}},{key:"_setEventListeners",value:function(){var e=this;this._trash(),this._element.querySelector(".cards__image").addEventListener("click",(function(){e._handleOpenPopup()})),this._element.querySelector(".cards__icon-like").addEventListener("click",(function(){})),ee.addEventListener("click",(function(){e._handleClosePopup()})),oe.addEventListener("click",(function(){e._closePopupConfirmation()}))}}])&&Q(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function ie(e){return ie="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ie(e)}function ue(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,ce(o.key),o)}}function ce(e){var t=function(e,t){if("object"!=ie(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!=ie(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ie(t)?t:t+""}var ae=function(){return e=function e(t){var n=t.nameSelector,o=t.aboutSelector,r=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(n),this._aboutElement=document.querySelector(o),this._avatarElement=document.querySelector(r)},(t=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,about:this._aboutElement.textContent,avatar:this._avatarElement.src}}},{key:"setUserInfo",value:function(e,t,n){this._nameElement.textContent=e,this._aboutElement.textContent=t,this._avatarElement.src=n}}])&&ue(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function le(e){return le="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},le(e)}function se(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function pe(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?se(Object(n),!0).forEach((function(t){var o,r,i;o=e,r=t,i=n[t],(r=de(r))in o?Object.defineProperty(o,r,{value:i,enumerable:!0,configurable:!0,writable:!0}):o[r]=i})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):se(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function fe(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,de(o.key),o)}}function de(e){var t=function(e,t){if("object"!=le(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!=le(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==le(t)?t:t+""}var me=function(){return e=function e(t){var n=t.baseUrl,o=t.token,r=t.id,i=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=n,this.token=o,this.id=r,this.headers=i},(t=[{key:"getUser",value:function(){return fetch("".concat(this.baseUrl,"/users"),{method:"GET",headers:{"content-type":"application/json",authorization:this.token}})}},{key:"getUserMe",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{headers:{"content-type":"application/json",authorization:this.token}})}},{key:"userEdit",value:function(e,t){return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:{"content-type":"application/json",authorization:this.token},body:JSON.stringify({name:e,about:t})})}},{key:"getInitialCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{method:"GET",headers:{"content-type":"application/json",authorization:this.token}})}},{key:"createCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:pe(pe({"content-type":"application/json"},this.headers),{},{authorization:this.token}),body:JSON.stringify(e)})}},{key:"Update",value:function(e){return fetch("".concat(this.baseUrl,"/cards"),{method:"PATCH",headers:pe(pe({"content-type":"application/json"},this.headers),{},{authorization:this.token}),body:JSON.stringify(e)})}},{key:"deleteCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:pe(pe({"content-type":"application/json"},this.headers),{},{authorization:this.token})})}},{key:"addLikes",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:pe(pe({"content-type":"application/json"},this.headers),{},{authorization:this.token})})}},{key:"removeLikes",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:pe(pe({"content-type":"application/json"},this.headers),{},{authorization:this.token})})}},{key:"editAvatar",value:function(e){var t=e.avatar;return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:pe(pe({"content-type":"application/json"},this.headers),{},{authorization:this.token}),body:JSON.stringify({avatar:t})})}}])&&fe(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}(),ye=document.querySelector(".profile__button_icon_edit"),_e=document.querySelector(".popup"),ve=(_e.querySelector(".popup__icon"),_e.querySelector(".popup__description-name")),he=_e.querySelector(".popup__description-job"),be=(document.querySelector(".profile__title"),document.querySelector(".profile__subheading"),document.querySelector(".profile__image")),Ee=document.querySelector(".profile__button-add_icon_add"),Se=document.querySelector(".popup-add"),ke=(Se.querySelector(".popup-add__icon"),Se.querySelector(".popup-add__button"),document.querySelector(".popup-img"),document.querySelector(".cards__image"),document.querySelector(".popup-delete__icon"),document.querySelector("#popup-confirmation")),ge=(document.querySelector(".profile__container"),document.querySelector(".profile__icon-avatar")),we=(document.querySelector(".popup-edit__button"),document.querySelector(".popup-edit"),new me({baseUrl:"https://around.nomoreparties.co/v1/web_ptbr_09",token:"456ee6ec-46f6-419a-a366-46d144a5e3b1"}));we.getUser().then((function(e){return e.ok?e.json():Promise.reject(e.status)})).then((function(e){return e})).catch((function(e){console.log("Error: ".concat(e))}));var je=new ae({nameSelector:".profile__title",aboutSelector:".profile__subheading",avatarSelector:".profile__image"});we.getUserMe().then((function(e){return e.ok?e.json():Promise.reject(e.status)})).then((function(e){var t=e.name,n=e.about,o=e.avatar;je.setUserInfo(t,n,o)})).catch((function(e){console.log("Error: ".concat(e))}));var Pe,qe=new _({popupSelector:".popup",enableValidation:Le,submitCallback:function(e){var t=e.name,n=e.about;we.userEdit(t,n).then((function(e){return e.ok?e.json():Promise.reject(e.status)}));var o=je.getUserInfo().avatar;je.setUserInfo(t,n,o)}});qe.setEventListeners(),ye.addEventListener("click",(function(){var e=je.getUserInfo(),t=e.name,n=e.about;ve.value=t,he.value=n,qe.open(Le())})),(Pe=new _({popupSelector:".popup-add",submitCallback:function(){var e={name:te.value,link:ne.value};we.createCard(e).then((function(e){return e.ok?e.json():Promise.reject(e.status)})).then((function(e){var t=new re(e.name,e.link,e._id,e.likes,e.owner,".card-template",Ce,Te,Ue,Ie,Ae).generateCard();X.prepend(t)}))}})).setEventListeners(),Ee.addEventListener("click",(function(){Pe.open()}));var Oe=new _({popupSelector:".popup-edit",submitCallback:function(e){var t=e.image;we.editAvatar({avatar:document.querySelector(".popup-edit__description-link").value});var n=je.getUserInfo(),o=n.name,r=n.about;je.setUserInfo(o,r,t)}});Oe.setEventListeners(),ge.addEventListener("click",(function(){Oe.open(Le())})),be.addEventListener("mouseover",(function(e){(ge.style.display="none")&&(ge.style.display="block")})),be.addEventListener("mouseout",(function(e){(ge.style.display="block")&&(ge.style.display="none")})),we.getInitialCards().then((function(e){return e.ok?e.json():Promise.reject(e.status)})).then((function(e){return e})).catch((function(e){console.log("Error: ".concat(e))})),we.getInitialCards().then((function(e){return e.ok?e.json():Promise.reject(e.status)})).then((function(e){new o({items:e,renderer:function(e){var t=new re(e.name,e.link,e._id,e.likes,e.owner,".card-template",Ce,Te,Ue,Ie,Ae).generateCard();X.append(t)}}).renderItems()})).catch((function(e){console.log(e)}));var Le=function(){new o({items:H,renderer:function(e){return new G(".popup",e.inputElement).inputElements()+new G(".popup-add",e.inputElement).inputElements()+new G(".popup-edit",e.inputElement).inputElements()}}).renderItems()};function Ce(){new j(".popup-delete").openPopup(),Le()}function Te(){new j(".popup-delete").closePopup()}function Ue(e,t){var n=new j(".popup-delete");ke.addEventListener("click",(function(){n.setEventListeners(),we.deleteCard(e).then((function(){t.remove()})),n.closePopup()}))}function Ie(e){we.addLikes(e).then((function(e){return e.ok?e.json():Promise.reject(e.status)})).then((function(){}))}function Ae(e){we.removeLikes(e).then((function(e){return e.ok?e.json():Promise.reject(e.status)})).then((function(){}))}}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,